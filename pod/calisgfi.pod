=head1 Description

PROC CALIS, like other structural equation model software, produces
a table of goodness of fit statistics that is hard to read because it
simply presents a long list of many statistics without any structure.
The CALISGFI macro takes an C<OUTRAM=> data set from PROC CALIS, extracts
the goodness-of-fit statistics, and produces a more easily understood
version.

=head2 Method

Very ugly contortions are used to extract and reform the statistics
from the OUTRAM data set.  The main innovation here is to group and
relabel the plethora of fit statistics into coherent categories. This
macro was written before ODS was available.  I'm not sure if ODS would
make this any easier.


=head1 Usage

The CALISGFI macro is defined with keyword parameters.  The C<RAM=>
parameter is required.
The arguments may be listed within parentheses in any order, separated
by commas. For example: 

  %calisgfi(ram=ram1, nv=5);

=head2 Parameters

=over 4

=item RAM=

Name of the C<OUTRAM=> data set from PROC CALIS

=item NV=

Number of observed variables in the model.  This is
             needed to calculate the DF for the null model, because
             it doesn't appear in the C<OUTRAM=> data set.

=item OUT=

Name of output data set

=item VERBOSE=

0 or 1.  Mainly for testing/debugging.


=back 4

=head2 Example

The following lines read a covariance matrix of four variables,
X1, X2, Y1, Y2, and fit a two-factor model, capturing the
GFI statistics in an C<OUTRAM=> dataset, RAM4, which is input
to the CALISGFI macro.

  data lord(type=cov);
     input _type_ $ _name_ $  x1 x2 y1 y2;
  cards;
  n   .  649       .       .       .
  cov x1 86.3937   .       .       .
  cov x2 57.7751 86.2632   .       .
  cov y1 56.8651 59.3177 97.2850   .
  cov y2 58.8986 59.6683 73.8201 97.8192
  ;
  title "Lord's data: H4- unconstrained two-factor model";
  proc calis data=lord cov noprint outram=ram4;
     lineqs  x1 = beta1 F1  + e1,
              x2 = beta2 F1  + e2,
              y1 = beta3 F2  + e3,
              y2 = beta4 F2  + e4;
     std  F1 F2 = 1,
           e1 e2 e3 e4 = ve1 ve2 ve3 ve4;
     cov  F1 F2 = rho;
  run;

  %calisgfi(ram=ram4, nv=4);

